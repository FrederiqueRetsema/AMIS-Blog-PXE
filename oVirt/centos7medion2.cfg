#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use network installation
url --url="ftp://192.168.2.191/CentOS7"
# Use graphical shell
graphical
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda,sdb
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
# Select updates where possible
repo --name=updates

# network information
network --bootproto=static --device=enp3s0 --gateway=192.168.2.254 --ip=192.168.2.51 --nameserver=192.168.2.254 --netmask=255.255.255.0 --ipv6=auto --activate
network --hostname=medion2.fra.nl

# Root password
rootpw --lock
# System services
services --enabled="chronyd"
# System timezone
timezone Europe/Amsterdam --isUtc
user --groups=wheel --name=frederique --password=$6$ISxpNV3kE7gfvlpi$RRWVusy/EiatEuCEIdYhR.R1PdT6KBt2xuaPGaKdZRx93RB5bua4QEEh4aQNmTIpVLcz.4YXaVvk8brKlwslf/ --iscrypted --gecos="Frederique"
# System bootloader configuration
bootloader --append=" crashkernel=auto"  --location=mbr --boot-drive=sda
# Partition clearing information
clearpart --all --initlabel --drives=sda,sdb
# Disk partitioning information
part pv.2212 --fstype="lvmpv" --ondisk=sda --size=15002
part pv.1242 --fstype="lvmpv" --ondisk=sdb --size=794312
part pv.1590 --fstype="lvmpv" --ondisk=sda --size=1025
part swap --fstype="swap" --size=1022
part pv.1236 --fstype="lvmpv" --ondisk=sda --size=57532
part /boot --fstype="ext4" --size=500
part pv.1596 --fstype="lvmpv" --ondisk=sdb --size=1025
part pv.2218 --fstype="lvmpv" --ondisk=sdb --size=15002
volgroup lv_libvirt --pesize=4096 pv.1236 pv.1242
volgroup lv_home --pesize=4096 pv.1590 pv.1596
volgroup lv_root --pesize=4096 pv.2212 pv.2218
logvol / --fstype="xfs" --size=30000 --name=root --vgname=lv_root
logvol /var/lib/libvirt --fstype="xfs" --size=801836 --name=var_lib_libvirt --vgname=lv_libvirt
logvol /var/tmp --fstype="xfs" --size=50000 --name=var_tmp --vgname=lv_libvirt
logvol /home --fstype="xfs" --size=2048 --name=home --vgname=lv_home

%packages
@^minimal
@core
chrony
ftp
bind-utils

kexec-tools

%end

%post
   # Change DNS settings of the network interface to be local-dns first and global dns second
   #
   DEVICEFILE=/etc/sysconfig/network-scripts/ifcfg-enp3s0
   DNSLINENO=`grep -rne "DNS1" ${DEVICEFILE} | awk -F":" '{print $1}'`
   sed -i "${DNSLINENO}c DNS1=\"192.168.2.2\"" ${DEVICEFILE}
   let DNSLINENO=DNSLINENO+1
   sed -i "${DNSLINENO}i DNS2=\"192.168.2.254\"" ${DEVICEFILE}

   # By default, some setting that qemu needs is disabled in the kernel, 
   # enable it by adding the parameter intel_iommu=on to the kernel parameters. 
   # See virt-host-validate.
   # 
   # First, determine the current line of GRUB_CMDLINE_DEFAULT.
   # Then, add two ""'s to it (the part that should be changed, has three " 's now)
   # Finally, change the line by changing """ into <space>intel_iommu=on"
   # Then, use grub2-mkconfig to re-create the bootfile
   #

   GRUB_CMDLINE_LINUX=`grep GRUB_CMDLINE_LINUX /etc/default/grub`
   sed -i "/GRUB_CMDLINE_LINUX/c ${GRUB_CMDLINE_LINUX}\"\"" /etc/default/grub
   sed -i "s/\"\"\"/ intel_iommu=on\"/" /etc/default/grub
   grub2-mkconfig > /boot/grub2/grub.cfg

   # Create post-install script
   #
   echo "usermod -U root" > /root/post-install.sh
   echo "passwd root" >> /root/post-install.sh
   echo "yum update -y" >> /root/post-install.sh
   echo "yum install https://resources.ovirt.org/pub/yum-repo/ovirt-release43.rpm -y" >> /root/post-install.sh
   echo "yum install cockpit cockpit-ovirt-dashboard -y" >> /root/post-install.sh
   echo "systemctl enable --now cockpit.socket" >> /root/post-install.sh
   echo "firewall-cmd --add-service=cockpit" >> /root/post-install.sh
   echo "firewall-cmd --add-service=cockpit --permanent" >> /root/post-install.sh

   echo "sed -i \"/#user = \\\"root\\\"/c user = \\\"vdsm\\\"\" /etc/libvirt/qemu.conf" >> /root/post-install.sh
   echo "sed -i \"/#group = \\\"root\\\"/c group = \\\"kvm\\\"\" /etc/libvirt/qemu.conf" >> /root/post-install.sh
   echo "modprobe fuse" >> /root/post-install.sh
   echo "echo fuse >> /etc/modules-load.d/fuse.conf" >> /root/post-install.sh

   # NFS
   #
   echo "mkdir /var/lib/libvirt/nfs-ovirt" >> /root/post-install.sh
   echo "chmod 777 /var/lib/libvirt/nfs-ovirt" >> /root/post-install.sh
   echo "ln -s /var/lib/libvirt/nfs-ovirt /nfs-ovirt" >> /root/post-install.sh
   echo "echo \"/nfs-ovirt 192.168.2.50(rw,root_squash,async) 192.168.2.51(rw,root_squash,async) 192.168.2.55(rw,root_squash,async)\" > /etc/exports" >> /root/post-install.sh
   echo "systemctl enable nfs" >> /root/post-install.sh
   echo "systemctl start nfs" >> /root/post-install.sh
   echo "systemctl enable rpcbind" >> /root/post-install.sh
   echo "systemctl start rpcbind" >> /root/post-install.sh
   echo "systemctl enable nfs-mountd" >> /root/post-install.sh
   echo "systemctl start nfs-mountd" >> /root/post-install.sh
   echo "firewall-cmd --add-service=nfs" >> /root/post-install.sh
   echo "firewall-cmd --add-service=nfs --permanent" >> /root/post-install.sh
   echo "firewall-cmd --add-service=mountd" >> /root/post-install.sh
   echo "firewall-cmd --add-service=mountd --permanent" >> /root/post-install.sh
   echo "firewall-cmd --add-service=rpc-bind" >> /root/post-install.sh
   echo "firewall-cmd --add-service=rpc-bind --permanent" >> /root/post-install.sh

   echo "virt-host-validate" >> /root/post-install.sh
   echo "echo \"REBOOT THE MACHINE. After that, log in to Cockpit as root at https://192.168.2.51:9090 and click virtualization > Hosted engine > Hosted engine\"" >> /root/post-install.sh
   echo "read" >> /root/post-install.sh
   echo "reboot now" >> /root/post-install.sh
   
   chmod 700 /root/post-install.sh

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end
